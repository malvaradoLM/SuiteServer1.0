//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RPSuiteServer {
    using System;
    using System.Collections.Generic;
    using RemObjects.SDK;
    using RemObjects.SDK.Types;
    
    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass=typeof(TRPReporte_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude=true)]
    public partial class TRPReporte : RemObjects.SDK.Types.ComplexType {
        private int @__ReporteID;
        private string @__Nombre;
        private int @__Columnas;
        private int @__Filas;
        private string @__Template;
        private string @__LayoutPivotGrid;
        private string @__Script;
        private string @__Descripcion;
        private TRPDataset[] @__Datasets;
        private TRPParametro[] @__Parametros;
        private TRPGrafica[] @__Graficas;
        private TRPConcentrado[] @__Concentrados;
        public virtual int ReporteID {
            get {
                return @__ReporteID;
            }
            set {
                @__ReporteID = value;
                this.TriggerPropertyChanged("ReporteID");
            }
        }
        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Nombre {
            get {
                return @__Nombre;
            }
            set {
                @__Nombre = value;
                this.TriggerPropertyChanged("Nombre");
            }
        }
        public virtual int Columnas {
            get {
                return @__Columnas;
            }
            set {
                @__Columnas = value;
                this.TriggerPropertyChanged("Columnas");
            }
        }
        public virtual int Filas {
            get {
                return @__Filas;
            }
            set {
                @__Filas = value;
                this.TriggerPropertyChanged("Filas");
            }
        }
        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Template {
            get {
                return @__Template;
            }
            set {
                @__Template = value;
                this.TriggerPropertyChanged("Template");
            }
        }
        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string LayoutPivotGrid {
            get {
                return @__LayoutPivotGrid;
            }
            set {
                @__LayoutPivotGrid = value;
                this.TriggerPropertyChanged("LayoutPivotGrid");
            }
        }
        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Script {
            get {
                return @__Script;
            }
            set {
                @__Script = value;
                this.TriggerPropertyChanged("Script");
            }
        }
        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Descripcion {
            get {
                return @__Descripcion;
            }
            set {
                @__Descripcion = value;
                this.TriggerPropertyChanged("Descripcion");
            }
        }
        public virtual TRPDataset[] Datasets {
            get {
                return @__Datasets;
            }
            set {
                @__Datasets = value;
                this.TriggerPropertyChanged("Datasets");
            }
        }
        public virtual TRPParametro[] Parametros {
            get {
                return @__Parametros;
            }
            set {
                @__Parametros = value;
                this.TriggerPropertyChanged("Parametros");
            }
        }
        public virtual TRPGrafica[] Graficas {
            get {
                return @__Graficas;
            }
            set {
                @__Graficas = value;
                this.TriggerPropertyChanged("Graficas");
            }
        }
        public virtual TRPConcentrado[] Concentrados {
            get {
                return @__Concentrados;
            }
            set {
                @__Concentrados = value;
                this.TriggerPropertyChanged("Concentrados");
            }
        }
        public override void ReadComplex(RemObjects.SDK.Serializer serializer) {
            if (serializer.RecordStrictOrder) {
                this.ReporteID = serializer.ReadInt32("ReporteID");
                this.Nombre = serializer.ReadAnsiString("Nombre");
                this.Columnas = serializer.ReadInt32("Columnas");
                this.Filas = serializer.ReadInt32("Filas");
                this.Template = serializer.ReadAnsiString("Template");
                this.LayoutPivotGrid = serializer.ReadAnsiString("LayoutPivotGrid");
                this.Script = serializer.ReadAnsiString("Script");
                this.Descripcion = serializer.ReadAnsiString("Descripcion");
                this.Datasets = ((TRPDataset[])(serializer.Read("Datasets", typeof(TRPDataset[]), RemObjects.SDK.StreamingFormat.Default)));
                this.Parametros = ((TRPParametro[])(serializer.Read("Parametros", typeof(TRPParametro[]), RemObjects.SDK.StreamingFormat.Default)));
                this.Graficas = ((TRPGrafica[])(serializer.Read("Graficas", typeof(TRPGrafica[]), RemObjects.SDK.StreamingFormat.Default)));
                this.Concentrados = ((TRPConcentrado[])(serializer.Read("Concentrados", typeof(TRPConcentrado[]), RemObjects.SDK.StreamingFormat.Default)));
            }
            else {
                this.Columnas = serializer.ReadInt32("Columnas");
                this.Concentrados = ((TRPConcentrado[])(serializer.Read("Concentrados", typeof(TRPConcentrado[]), RemObjects.SDK.StreamingFormat.Default)));
                this.Datasets = ((TRPDataset[])(serializer.Read("Datasets", typeof(TRPDataset[]), RemObjects.SDK.StreamingFormat.Default)));
                this.Descripcion = serializer.ReadAnsiString("Descripcion");
                this.Filas = serializer.ReadInt32("Filas");
                this.Graficas = ((TRPGrafica[])(serializer.Read("Graficas", typeof(TRPGrafica[]), RemObjects.SDK.StreamingFormat.Default)));
                this.LayoutPivotGrid = serializer.ReadAnsiString("LayoutPivotGrid");
                this.Nombre = serializer.ReadAnsiString("Nombre");
                this.Parametros = ((TRPParametro[])(serializer.Read("Parametros", typeof(TRPParametro[]), RemObjects.SDK.StreamingFormat.Default)));
                this.ReporteID = serializer.ReadInt32("ReporteID");
                this.Script = serializer.ReadAnsiString("Script");
                this.Template = serializer.ReadAnsiString("Template");
            }
        }
        public override void WriteComplex(RemObjects.SDK.Serializer serializer) {
            if (serializer.RecordStrictOrder) {
                serializer.WriteInt32("ReporteID", this.ReporteID);
                serializer.WriteAnsiString("Nombre", this.Nombre);
                serializer.WriteInt32("Columnas", this.Columnas);
                serializer.WriteInt32("Filas", this.Filas);
                serializer.WriteAnsiString("Template", this.Template);
                serializer.WriteAnsiString("LayoutPivotGrid", this.LayoutPivotGrid);
                serializer.WriteAnsiString("Script", this.Script);
                serializer.WriteAnsiString("Descripcion", this.Descripcion);
                serializer.Write("Datasets", this.Datasets, typeof(TRPDataset[]), RemObjects.SDK.StreamingFormat.Default);
                serializer.Write("Parametros", this.Parametros, typeof(TRPParametro[]), RemObjects.SDK.StreamingFormat.Default);
                serializer.Write("Graficas", this.Graficas, typeof(TRPGrafica[]), RemObjects.SDK.StreamingFormat.Default);
                serializer.Write("Concentrados", this.Concentrados, typeof(TRPConcentrado[]), RemObjects.SDK.StreamingFormat.Default);
            }
            else {
                serializer.WriteInt32("Columnas", this.Columnas);
                serializer.Write("Concentrados", this.Concentrados, typeof(TRPConcentrado[]), RemObjects.SDK.StreamingFormat.Default);
                serializer.Write("Datasets", this.Datasets, typeof(TRPDataset[]), RemObjects.SDK.StreamingFormat.Default);
                serializer.WriteAnsiString("Descripcion", this.Descripcion);
                serializer.WriteInt32("Filas", this.Filas);
                serializer.Write("Graficas", this.Graficas, typeof(TRPGrafica[]), RemObjects.SDK.StreamingFormat.Default);
                serializer.WriteAnsiString("LayoutPivotGrid", this.LayoutPivotGrid);
                serializer.WriteAnsiString("Nombre", this.Nombre);
                serializer.Write("Parametros", this.Parametros, typeof(TRPParametro[]), RemObjects.SDK.StreamingFormat.Default);
                serializer.WriteInt32("ReporteID", this.ReporteID);
                serializer.WriteAnsiString("Script", this.Script);
                serializer.WriteAnsiString("Template", this.Template);
            }
        }
    }
    [System.Reflection.ObfuscationAttribute(Exclude=true, ApplyToMembers=false)]
    public class TRPReporte_Activator : object, RemObjects.SDK.ITypeActivator {
        public TRPReporte_Activator() {
        }
        public object CreateInstance() {
            return new TRPReporte();
        }
    }
    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass=typeof(TRPParametro_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude=true)]
    public partial class TRPParametro : RemObjects.SDK.Types.ComplexType {
        private int @__ParametroID;
        private string @__Nombre;
        private string @__Descripcion;
        private string @__SQL;
        private string @__CampoLLave;
        private int @__Tipo;
        private int @__TipoControl;
        private int @__IndiceGrupo;
        private TRPValorLista[] @__Lista;
        private object @__Valor;
        public virtual int ParametroID {
            get {
                return @__ParametroID;
            }
            set {
                @__ParametroID = value;
                this.TriggerPropertyChanged("ParametroID");
            }
        }
        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Nombre {
            get {
                return @__Nombre;
            }
            set {
                @__Nombre = value;
                this.TriggerPropertyChanged("Nombre");
            }
        }
        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Descripcion {
            get {
                return @__Descripcion;
            }
            set {
                @__Descripcion = value;
                this.TriggerPropertyChanged("Descripcion");
            }
        }
        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string SQL {
            get {
                return @__SQL;
            }
            set {
                @__SQL = value;
                this.TriggerPropertyChanged("SQL");
            }
        }
        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string CampoLLave {
            get {
                return @__CampoLLave;
            }
            set {
                @__CampoLLave = value;
                this.TriggerPropertyChanged("CampoLLave");
            }
        }
        public virtual int Tipo {
            get {
                return @__Tipo;
            }
            set {
                @__Tipo = value;
                this.TriggerPropertyChanged("Tipo");
            }
        }
        public virtual int TipoControl {
            get {
                return @__TipoControl;
            }
            set {
                @__TipoControl = value;
                this.TriggerPropertyChanged("TipoControl");
            }
        }
        public virtual int IndiceGrupo {
            get {
                return @__IndiceGrupo;
            }
            set {
                @__IndiceGrupo = value;
                this.TriggerPropertyChanged("IndiceGrupo");
            }
        }
        public virtual TRPValorLista[] Lista {
            get {
                return @__Lista;
            }
            set {
                @__Lista = value;
                this.TriggerPropertyChanged("Lista");
            }
        }
        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.Variant)]
        public virtual object Valor {
            get {
                return @__Valor;
            }
            set {
                @__Valor = value;
                this.TriggerPropertyChanged("Valor");
            }
        }
        public override void ReadComplex(RemObjects.SDK.Serializer serializer) {
            if (serializer.RecordStrictOrder) {
                this.ParametroID = serializer.ReadInt32("ParametroID");
                this.Nombre = serializer.ReadAnsiString("Nombre");
                this.Descripcion = serializer.ReadAnsiString("Descripcion");
                this.SQL = serializer.ReadAnsiString("SQL");
                this.CampoLLave = serializer.ReadAnsiString("CampoLLave");
                this.Tipo = serializer.ReadInt32("Tipo");
                this.TipoControl = serializer.ReadInt32("TipoControl");
                this.IndiceGrupo = serializer.ReadInt32("IndiceGrupo");
                this.Lista = ((TRPValorLista[])(serializer.Read("Lista", typeof(TRPValorLista[]), RemObjects.SDK.StreamingFormat.Default)));
                this.Valor = serializer.ReadVariant("Valor");
            }
            else {
                this.CampoLLave = serializer.ReadAnsiString("CampoLLave");
                this.Descripcion = serializer.ReadAnsiString("Descripcion");
                this.IndiceGrupo = serializer.ReadInt32("IndiceGrupo");
                this.Lista = ((TRPValorLista[])(serializer.Read("Lista", typeof(TRPValorLista[]), RemObjects.SDK.StreamingFormat.Default)));
                this.Nombre = serializer.ReadAnsiString("Nombre");
                this.ParametroID = serializer.ReadInt32("ParametroID");
                this.SQL = serializer.ReadAnsiString("SQL");
                this.Tipo = serializer.ReadInt32("Tipo");
                this.TipoControl = serializer.ReadInt32("TipoControl");
                this.Valor = serializer.ReadVariant("Valor");
            }
        }
        public override void WriteComplex(RemObjects.SDK.Serializer serializer) {
            if (serializer.RecordStrictOrder) {
                serializer.WriteInt32("ParametroID", this.ParametroID);
                serializer.WriteAnsiString("Nombre", this.Nombre);
                serializer.WriteAnsiString("Descripcion", this.Descripcion);
                serializer.WriteAnsiString("SQL", this.SQL);
                serializer.WriteAnsiString("CampoLLave", this.CampoLLave);
                serializer.WriteInt32("Tipo", this.Tipo);
                serializer.WriteInt32("TipoControl", this.TipoControl);
                serializer.WriteInt32("IndiceGrupo", this.IndiceGrupo);
                serializer.Write("Lista", this.Lista, typeof(TRPValorLista[]), RemObjects.SDK.StreamingFormat.Default);
                serializer.WriteVariant("Valor", this.Valor);
            }
            else {
                serializer.WriteAnsiString("CampoLLave", this.CampoLLave);
                serializer.WriteAnsiString("Descripcion", this.Descripcion);
                serializer.WriteInt32("IndiceGrupo", this.IndiceGrupo);
                serializer.Write("Lista", this.Lista, typeof(TRPValorLista[]), RemObjects.SDK.StreamingFormat.Default);
                serializer.WriteAnsiString("Nombre", this.Nombre);
                serializer.WriteInt32("ParametroID", this.ParametroID);
                serializer.WriteAnsiString("SQL", this.SQL);
                serializer.WriteInt32("Tipo", this.Tipo);
                serializer.WriteInt32("TipoControl", this.TipoControl);
                serializer.WriteVariant("Valor", this.Valor);
            }
        }
    }
    [System.Reflection.ObfuscationAttribute(Exclude=true, ApplyToMembers=false)]
    public class TRPParametro_Activator : object, RemObjects.SDK.ITypeActivator {
        public TRPParametro_Activator() {
        }
        public object CreateInstance() {
            return new TRPParametro();
        }
    }
    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass=typeof(TRPDataset_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude=true)]
    public partial class TRPDataset : RemObjects.SDK.Types.ComplexType {
        private int @__DatasetID;
        private string @__Nombre;
        private string @__Script;
        private string @__CampoJoin;
        private int @__MasterDetailID;
        private TRPCampo[] @__Campos;
        private TRPPaso[] @__Pasos;
        public virtual int DatasetID {
            get {
                return @__DatasetID;
            }
            set {
                @__DatasetID = value;
                this.TriggerPropertyChanged("DatasetID");
            }
        }
        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Nombre {
            get {
                return @__Nombre;
            }
            set {
                @__Nombre = value;
                this.TriggerPropertyChanged("Nombre");
            }
        }
        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Script {
            get {
                return @__Script;
            }
            set {
                @__Script = value;
                this.TriggerPropertyChanged("Script");
            }
        }
        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string CampoJoin {
            get {
                return @__CampoJoin;
            }
            set {
                @__CampoJoin = value;
                this.TriggerPropertyChanged("CampoJoin");
            }
        }
        public virtual int MasterDetailID {
            get {
                return @__MasterDetailID;
            }
            set {
                @__MasterDetailID = value;
                this.TriggerPropertyChanged("MasterDetailID");
            }
        }
        public virtual TRPCampo[] Campos {
            get {
                return @__Campos;
            }
            set {
                @__Campos = value;
                this.TriggerPropertyChanged("Campos");
            }
        }
        public virtual TRPPaso[] Pasos {
            get {
                return @__Pasos;
            }
            set {
                @__Pasos = value;
                this.TriggerPropertyChanged("Pasos");
            }
        }
        public override void ReadComplex(RemObjects.SDK.Serializer serializer) {
            if (serializer.RecordStrictOrder) {
                this.DatasetID = serializer.ReadInt32("DatasetID");
                this.Nombre = serializer.ReadAnsiString("Nombre");
                this.Script = serializer.ReadAnsiString("Script");
                this.CampoJoin = serializer.ReadAnsiString("CampoJoin");
                this.MasterDetailID = serializer.ReadInt32("MasterDetailID");
                this.Campos = ((TRPCampo[])(serializer.Read("Campos", typeof(TRPCampo[]), RemObjects.SDK.StreamingFormat.Default)));
                this.Pasos = ((TRPPaso[])(serializer.Read("Pasos", typeof(TRPPaso[]), RemObjects.SDK.StreamingFormat.Default)));
            }
            else {
                this.CampoJoin = serializer.ReadAnsiString("CampoJoin");
                this.Campos = ((TRPCampo[])(serializer.Read("Campos", typeof(TRPCampo[]), RemObjects.SDK.StreamingFormat.Default)));
                this.DatasetID = serializer.ReadInt32("DatasetID");
                this.MasterDetailID = serializer.ReadInt32("MasterDetailID");
                this.Nombre = serializer.ReadAnsiString("Nombre");
                this.Pasos = ((TRPPaso[])(serializer.Read("Pasos", typeof(TRPPaso[]), RemObjects.SDK.StreamingFormat.Default)));
                this.Script = serializer.ReadAnsiString("Script");
            }
        }
        public override void WriteComplex(RemObjects.SDK.Serializer serializer) {
            if (serializer.RecordStrictOrder) {
                serializer.WriteInt32("DatasetID", this.DatasetID);
                serializer.WriteAnsiString("Nombre", this.Nombre);
                serializer.WriteAnsiString("Script", this.Script);
                serializer.WriteAnsiString("CampoJoin", this.CampoJoin);
                serializer.WriteInt32("MasterDetailID", this.MasterDetailID);
                serializer.Write("Campos", this.Campos, typeof(TRPCampo[]), RemObjects.SDK.StreamingFormat.Default);
                serializer.Write("Pasos", this.Pasos, typeof(TRPPaso[]), RemObjects.SDK.StreamingFormat.Default);
            }
            else {
                serializer.WriteAnsiString("CampoJoin", this.CampoJoin);
                serializer.Write("Campos", this.Campos, typeof(TRPCampo[]), RemObjects.SDK.StreamingFormat.Default);
                serializer.WriteInt32("DatasetID", this.DatasetID);
                serializer.WriteInt32("MasterDetailID", this.MasterDetailID);
                serializer.WriteAnsiString("Nombre", this.Nombre);
                serializer.Write("Pasos", this.Pasos, typeof(TRPPaso[]), RemObjects.SDK.StreamingFormat.Default);
                serializer.WriteAnsiString("Script", this.Script);
            }
        }
    }
    [System.Reflection.ObfuscationAttribute(Exclude=true, ApplyToMembers=false)]
    public class TRPDataset_Activator : object, RemObjects.SDK.ITypeActivator {
        public TRPDataset_Activator() {
        }
        public object CreateInstance() {
            return new TRPDataset();
        }
    }
    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass=typeof(TRPCampo_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude=true)]
    public partial class TRPCampo : RemObjects.SDK.Types.ComplexType {
        private int @__CampoID;
        private string @__Nombre;
        private int @__Tipo;
        private int @__Size;
        private string @__Formato;
        public virtual int CampoID {
            get {
                return @__CampoID;
            }
            set {
                @__CampoID = value;
                this.TriggerPropertyChanged("CampoID");
            }
        }
        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Nombre {
            get {
                return @__Nombre;
            }
            set {
                @__Nombre = value;
                this.TriggerPropertyChanged("Nombre");
            }
        }
        public virtual int Tipo {
            get {
                return @__Tipo;
            }
            set {
                @__Tipo = value;
                this.TriggerPropertyChanged("Tipo");
            }
        }
        public virtual int Size {
            get {
                return @__Size;
            }
            set {
                @__Size = value;
                this.TriggerPropertyChanged("Size");
            }
        }
        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Formato {
            get {
                return @__Formato;
            }
            set {
                @__Formato = value;
                this.TriggerPropertyChanged("Formato");
            }
        }
        public override void ReadComplex(RemObjects.SDK.Serializer serializer) {
            if (serializer.RecordStrictOrder) {
                this.CampoID = serializer.ReadInt32("CampoID");
                this.Nombre = serializer.ReadAnsiString("Nombre");
                this.Tipo = serializer.ReadInt32("Tipo");
                this.Size = serializer.ReadInt32("Size");
                this.Formato = serializer.ReadAnsiString("Formato");
            }
            else {
                this.CampoID = serializer.ReadInt32("CampoID");
                this.Formato = serializer.ReadAnsiString("Formato");
                this.Nombre = serializer.ReadAnsiString("Nombre");
                this.Size = serializer.ReadInt32("Size");
                this.Tipo = serializer.ReadInt32("Tipo");
            }
        }
        public override void WriteComplex(RemObjects.SDK.Serializer serializer) {
            if (serializer.RecordStrictOrder) {
                serializer.WriteInt32("CampoID", this.CampoID);
                serializer.WriteAnsiString("Nombre", this.Nombre);
                serializer.WriteInt32("Tipo", this.Tipo);
                serializer.WriteInt32("Size", this.Size);
                serializer.WriteAnsiString("Formato", this.Formato);
            }
            else {
                serializer.WriteInt32("CampoID", this.CampoID);
                serializer.WriteAnsiString("Formato", this.Formato);
                serializer.WriteAnsiString("Nombre", this.Nombre);
                serializer.WriteInt32("Size", this.Size);
                serializer.WriteInt32("Tipo", this.Tipo);
            }
        }
    }
    [System.Reflection.ObfuscationAttribute(Exclude=true, ApplyToMembers=false)]
    public class TRPCampo_Activator : object, RemObjects.SDK.ITypeActivator {
        public TRPCampo_Activator() {
        }
        public object CreateInstance() {
            return new TRPCampo();
        }
    }
    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass=typeof(TRPPaso_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude=true)]
    public partial class TRPPaso : RemObjects.SDK.Types.ComplexType {
        private int @__PasoID;
        private string @__Nombre;
        private string @__SQL;
        public virtual int PasoID {
            get {
                return @__PasoID;
            }
            set {
                @__PasoID = value;
                this.TriggerPropertyChanged("PasoID");
            }
        }
        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Nombre {
            get {
                return @__Nombre;
            }
            set {
                @__Nombre = value;
                this.TriggerPropertyChanged("Nombre");
            }
        }
        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string SQL {
            get {
                return @__SQL;
            }
            set {
                @__SQL = value;
                this.TriggerPropertyChanged("SQL");
            }
        }
        public override void ReadComplex(RemObjects.SDK.Serializer serializer) {
            if (serializer.RecordStrictOrder) {
                this.PasoID = serializer.ReadInt32("PasoID");
                this.Nombre = serializer.ReadAnsiString("Nombre");
                this.SQL = serializer.ReadAnsiString("SQL");
            }
            else {
                this.Nombre = serializer.ReadAnsiString("Nombre");
                this.PasoID = serializer.ReadInt32("PasoID");
                this.SQL = serializer.ReadAnsiString("SQL");
            }
        }
        public override void WriteComplex(RemObjects.SDK.Serializer serializer) {
            if (serializer.RecordStrictOrder) {
                serializer.WriteInt32("PasoID", this.PasoID);
                serializer.WriteAnsiString("Nombre", this.Nombre);
                serializer.WriteAnsiString("SQL", this.SQL);
            }
            else {
                serializer.WriteAnsiString("Nombre", this.Nombre);
                serializer.WriteInt32("PasoID", this.PasoID);
                serializer.WriteAnsiString("SQL", this.SQL);
            }
        }
    }
    [System.Reflection.ObfuscationAttribute(Exclude=true, ApplyToMembers=false)]
    public class TRPPaso_Activator : object, RemObjects.SDK.ITypeActivator {
        public TRPPaso_Activator() {
        }
        public object CreateInstance() {
            return new TRPPaso();
        }
    }
    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass=typeof(TRPGrafica_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude=true)]
    public partial class TRPGrafica : RemObjects.SDK.Types.ComplexType {
        private int @__GraficaID;
        private string @__Nombre;
        private string @__Template;
        public virtual int GraficaID {
            get {
                return @__GraficaID;
            }
            set {
                @__GraficaID = value;
                this.TriggerPropertyChanged("GraficaID");
            }
        }
        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Nombre {
            get {
                return @__Nombre;
            }
            set {
                @__Nombre = value;
                this.TriggerPropertyChanged("Nombre");
            }
        }
        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Template {
            get {
                return @__Template;
            }
            set {
                @__Template = value;
                this.TriggerPropertyChanged("Template");
            }
        }
        public override void ReadComplex(RemObjects.SDK.Serializer serializer) {
            if (serializer.RecordStrictOrder) {
                this.GraficaID = serializer.ReadInt32("GraficaID");
                this.Nombre = serializer.ReadAnsiString("Nombre");
                this.Template = serializer.ReadAnsiString("Template");
            }
            else {
                this.GraficaID = serializer.ReadInt32("GraficaID");
                this.Nombre = serializer.ReadAnsiString("Nombre");
                this.Template = serializer.ReadAnsiString("Template");
            }
        }
        public override void WriteComplex(RemObjects.SDK.Serializer serializer) {
            if (serializer.RecordStrictOrder) {
                serializer.WriteInt32("GraficaID", this.GraficaID);
                serializer.WriteAnsiString("Nombre", this.Nombre);
                serializer.WriteAnsiString("Template", this.Template);
            }
            else {
                serializer.WriteInt32("GraficaID", this.GraficaID);
                serializer.WriteAnsiString("Nombre", this.Nombre);
                serializer.WriteAnsiString("Template", this.Template);
            }
        }
    }
    [System.Reflection.ObfuscationAttribute(Exclude=true, ApplyToMembers=false)]
    public class TRPGrafica_Activator : object, RemObjects.SDK.ITypeActivator {
        public TRPGrafica_Activator() {
        }
        public object CreateInstance() {
            return new TRPGrafica();
        }
    }
    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass=typeof(TRPValidaQuery_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude=true)]
    public partial class TRPValidaQuery : RemObjects.SDK.Types.ComplexType {
        private bool @__Valido;
        private string @__Error;
        private TRPCampo[] @__Campos;
        public virtual bool Valido {
            get {
                return @__Valido;
            }
            set {
                @__Valido = value;
                this.TriggerPropertyChanged("Valido");
            }
        }
        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Error {
            get {
                return @__Error;
            }
            set {
                @__Error = value;
                this.TriggerPropertyChanged("Error");
            }
        }
        public virtual TRPCampo[] Campos {
            get {
                return @__Campos;
            }
            set {
                @__Campos = value;
                this.TriggerPropertyChanged("Campos");
            }
        }
        public override void ReadComplex(RemObjects.SDK.Serializer serializer) {
            if (serializer.RecordStrictOrder) {
                this.Valido = serializer.ReadBoolean("Valido");
                this.Error = serializer.ReadAnsiString("Error");
                this.Campos = ((TRPCampo[])(serializer.Read("Campos", typeof(TRPCampo[]), RemObjects.SDK.StreamingFormat.Default)));
            }
            else {
                this.Campos = ((TRPCampo[])(serializer.Read("Campos", typeof(TRPCampo[]), RemObjects.SDK.StreamingFormat.Default)));
                this.Error = serializer.ReadAnsiString("Error");
                this.Valido = serializer.ReadBoolean("Valido");
            }
        }
        public override void WriteComplex(RemObjects.SDK.Serializer serializer) {
            if (serializer.RecordStrictOrder) {
                serializer.WriteBoolean("Valido", this.Valido);
                serializer.WriteAnsiString("Error", this.Error);
                serializer.Write("Campos", this.Campos, typeof(TRPCampo[]), RemObjects.SDK.StreamingFormat.Default);
            }
            else {
                serializer.Write("Campos", this.Campos, typeof(TRPCampo[]), RemObjects.SDK.StreamingFormat.Default);
                serializer.WriteAnsiString("Error", this.Error);
                serializer.WriteBoolean("Valido", this.Valido);
            }
        }
    }
    [System.Reflection.ObfuscationAttribute(Exclude=true, ApplyToMembers=false)]
    public class TRPValidaQuery_Activator : object, RemObjects.SDK.ITypeActivator {
        public TRPValidaQuery_Activator() {
        }
        public object CreateInstance() {
            return new TRPValidaQuery();
        }
    }
    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass=typeof(TRPValorParametros_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude=true)]
    public partial class TRPValorParametros : RemObjects.SDK.Types.ComplexType {
        private bool @__Valido;
        private string @__Error;
        private TRPParametro[] @__Parametros;
        public virtual bool Valido {
            get {
                return @__Valido;
            }
            set {
                @__Valido = value;
                this.TriggerPropertyChanged("Valido");
            }
        }
        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Error {
            get {
                return @__Error;
            }
            set {
                @__Error = value;
                this.TriggerPropertyChanged("Error");
            }
        }
        public virtual TRPParametro[] Parametros {
            get {
                return @__Parametros;
            }
            set {
                @__Parametros = value;
                this.TriggerPropertyChanged("Parametros");
            }
        }
        public override void ReadComplex(RemObjects.SDK.Serializer serializer) {
            if (serializer.RecordStrictOrder) {
                this.Valido = serializer.ReadBoolean("Valido");
                this.Error = serializer.ReadAnsiString("Error");
                this.Parametros = ((TRPParametro[])(serializer.Read("Parametros", typeof(TRPParametro[]), RemObjects.SDK.StreamingFormat.Default)));
            }
            else {
                this.Error = serializer.ReadAnsiString("Error");
                this.Parametros = ((TRPParametro[])(serializer.Read("Parametros", typeof(TRPParametro[]), RemObjects.SDK.StreamingFormat.Default)));
                this.Valido = serializer.ReadBoolean("Valido");
            }
        }
        public override void WriteComplex(RemObjects.SDK.Serializer serializer) {
            if (serializer.RecordStrictOrder) {
                serializer.WriteBoolean("Valido", this.Valido);
                serializer.WriteAnsiString("Error", this.Error);
                serializer.Write("Parametros", this.Parametros, typeof(TRPParametro[]), RemObjects.SDK.StreamingFormat.Default);
            }
            else {
                serializer.WriteAnsiString("Error", this.Error);
                serializer.Write("Parametros", this.Parametros, typeof(TRPParametro[]), RemObjects.SDK.StreamingFormat.Default);
                serializer.WriteBoolean("Valido", this.Valido);
            }
        }
    }
    [System.Reflection.ObfuscationAttribute(Exclude=true, ApplyToMembers=false)]
    public class TRPValorParametros_Activator : object, RemObjects.SDK.ITypeActivator {
        public TRPValorParametros_Activator() {
        }
        public object CreateInstance() {
            return new TRPValorParametros();
        }
    }
    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass=typeof(TRPValorLista_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude=true)]
    public partial class TRPValorLista : RemObjects.SDK.Types.ComplexType {
        private int @__ValorID;
        private string @__Descripcion;
        private string @__Value;
        public virtual int ValorID {
            get {
                return @__ValorID;
            }
            set {
                @__ValorID = value;
                this.TriggerPropertyChanged("ValorID");
            }
        }
        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Descripcion {
            get {
                return @__Descripcion;
            }
            set {
                @__Descripcion = value;
                this.TriggerPropertyChanged("Descripcion");
            }
        }
        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Value {
            get {
                return @__Value;
            }
            set {
                @__Value = value;
                this.TriggerPropertyChanged("Value");
            }
        }
        public override void ReadComplex(RemObjects.SDK.Serializer serializer) {
            if (serializer.RecordStrictOrder) {
                this.ValorID = serializer.ReadInt32("ValorID");
                this.Descripcion = serializer.ReadAnsiString("Descripcion");
                this.Value = serializer.ReadAnsiString("Value");
            }
            else {
                this.Descripcion = serializer.ReadAnsiString("Descripcion");
                this.ValorID = serializer.ReadInt32("ValorID");
                this.Value = serializer.ReadAnsiString("Value");
            }
        }
        public override void WriteComplex(RemObjects.SDK.Serializer serializer) {
            if (serializer.RecordStrictOrder) {
                serializer.WriteInt32("ValorID", this.ValorID);
                serializer.WriteAnsiString("Descripcion", this.Descripcion);
                serializer.WriteAnsiString("Value", this.Value);
            }
            else {
                serializer.WriteAnsiString("Descripcion", this.Descripcion);
                serializer.WriteInt32("ValorID", this.ValorID);
                serializer.WriteAnsiString("Value", this.Value);
            }
        }
    }
    [System.Reflection.ObfuscationAttribute(Exclude=true, ApplyToMembers=false)]
    public class TRPValorLista_Activator : object, RemObjects.SDK.ITypeActivator {
        public TRPValorLista_Activator() {
        }
        public object CreateInstance() {
            return new TRPValorLista();
        }
    }
    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass=typeof(TRPFavorito_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude=true)]
    public partial class TRPFavorito : RemObjects.SDK.Types.ComplexType {
        private int @__UsuarioID;
        private int @__Tag;
        private int @__FavoritoID;
        private int @__GradientBeginColor;
        private string @__Text1;
        private string @__Text3;
        private int @__ImageIndex;
        private int @__Size;
        private int @__IndexInGroup;
        private int @__RowCount;
        private int @__GroupIndex;
        public virtual int UsuarioID {
            get {
                return @__UsuarioID;
            }
            set {
                @__UsuarioID = value;
                this.TriggerPropertyChanged("UsuarioID");
            }
        }
        public virtual int Tag {
            get {
                return @__Tag;
            }
            set {
                @__Tag = value;
                this.TriggerPropertyChanged("Tag");
            }
        }
        public virtual int FavoritoID {
            get {
                return @__FavoritoID;
            }
            set {
                @__FavoritoID = value;
                this.TriggerPropertyChanged("FavoritoID");
            }
        }
        public virtual int GradientBeginColor {
            get {
                return @__GradientBeginColor;
            }
            set {
                @__GradientBeginColor = value;
                this.TriggerPropertyChanged("GradientBeginColor");
            }
        }
        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Text1 {
            get {
                return @__Text1;
            }
            set {
                @__Text1 = value;
                this.TriggerPropertyChanged("Text1");
            }
        }
        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Text3 {
            get {
                return @__Text3;
            }
            set {
                @__Text3 = value;
                this.TriggerPropertyChanged("Text3");
            }
        }
        public virtual int ImageIndex {
            get {
                return @__ImageIndex;
            }
            set {
                @__ImageIndex = value;
                this.TriggerPropertyChanged("ImageIndex");
            }
        }
        public virtual int Size {
            get {
                return @__Size;
            }
            set {
                @__Size = value;
                this.TriggerPropertyChanged("Size");
            }
        }
        public virtual int IndexInGroup {
            get {
                return @__IndexInGroup;
            }
            set {
                @__IndexInGroup = value;
                this.TriggerPropertyChanged("IndexInGroup");
            }
        }
        public virtual int RowCount {
            get {
                return @__RowCount;
            }
            set {
                @__RowCount = value;
                this.TriggerPropertyChanged("RowCount");
            }
        }
        public virtual int GroupIndex {
            get {
                return @__GroupIndex;
            }
            set {
                @__GroupIndex = value;
                this.TriggerPropertyChanged("GroupIndex");
            }
        }
        public override void ReadComplex(RemObjects.SDK.Serializer serializer) {
            if (serializer.RecordStrictOrder) {
                this.UsuarioID = serializer.ReadInt32("UsuarioID");
                this.Tag = serializer.ReadInt32("Tag");
                this.FavoritoID = serializer.ReadInt32("FavoritoID");
                this.GradientBeginColor = serializer.ReadInt32("GradientBeginColor");
                this.Text1 = serializer.ReadAnsiString("Text1");
                this.Text3 = serializer.ReadAnsiString("Text3");
                this.ImageIndex = serializer.ReadInt32("ImageIndex");
                this.Size = serializer.ReadInt32("Size");
                this.IndexInGroup = serializer.ReadInt32("IndexInGroup");
                this.RowCount = serializer.ReadInt32("RowCount");
                this.GroupIndex = serializer.ReadInt32("GroupIndex");
            }
            else {
                this.FavoritoID = serializer.ReadInt32("FavoritoID");
                this.GradientBeginColor = serializer.ReadInt32("GradientBeginColor");
                this.GroupIndex = serializer.ReadInt32("GroupIndex");
                this.ImageIndex = serializer.ReadInt32("ImageIndex");
                this.IndexInGroup = serializer.ReadInt32("IndexInGroup");
                this.RowCount = serializer.ReadInt32("RowCount");
                this.Size = serializer.ReadInt32("Size");
                this.Tag = serializer.ReadInt32("Tag");
                this.Text1 = serializer.ReadAnsiString("Text1");
                this.Text3 = serializer.ReadAnsiString("Text3");
                this.UsuarioID = serializer.ReadInt32("UsuarioID");
            }
        }
        public override void WriteComplex(RemObjects.SDK.Serializer serializer) {
            if (serializer.RecordStrictOrder) {
                serializer.WriteInt32("UsuarioID", this.UsuarioID);
                serializer.WriteInt32("Tag", this.Tag);
                serializer.WriteInt32("FavoritoID", this.FavoritoID);
                serializer.WriteInt32("GradientBeginColor", this.GradientBeginColor);
                serializer.WriteAnsiString("Text1", this.Text1);
                serializer.WriteAnsiString("Text3", this.Text3);
                serializer.WriteInt32("ImageIndex", this.ImageIndex);
                serializer.WriteInt32("Size", this.Size);
                serializer.WriteInt32("IndexInGroup", this.IndexInGroup);
                serializer.WriteInt32("RowCount", this.RowCount);
                serializer.WriteInt32("GroupIndex", this.GroupIndex);
            }
            else {
                serializer.WriteInt32("FavoritoID", this.FavoritoID);
                serializer.WriteInt32("GradientBeginColor", this.GradientBeginColor);
                serializer.WriteInt32("GroupIndex", this.GroupIndex);
                serializer.WriteInt32("ImageIndex", this.ImageIndex);
                serializer.WriteInt32("IndexInGroup", this.IndexInGroup);
                serializer.WriteInt32("RowCount", this.RowCount);
                serializer.WriteInt32("Size", this.Size);
                serializer.WriteInt32("Tag", this.Tag);
                serializer.WriteAnsiString("Text1", this.Text1);
                serializer.WriteAnsiString("Text3", this.Text3);
                serializer.WriteInt32("UsuarioID", this.UsuarioID);
            }
        }
    }
    [System.Reflection.ObfuscationAttribute(Exclude=true, ApplyToMembers=false)]
    public class TRPFavorito_Activator : object, RemObjects.SDK.ITypeActivator {
        public TRPFavorito_Activator() {
        }
        public object CreateInstance() {
            return new TRPFavorito();
        }
    }
    [System.Serializable()]
    [RemObjects.SDK.Remotable(ActivatorClass=typeof(TRPConcentrado_Activator))]
    [System.Reflection.ObfuscationAttribute(Exclude=true)]
    public partial class TRPConcentrado : RemObjects.SDK.Types.ComplexType {
        private int @__ConcentradoID;
        private string @__Nombre;
        private int @__Dataset;
        private string @__Template;
        public virtual int ConcentradoID {
            get {
                return @__ConcentradoID;
            }
            set {
                @__ConcentradoID = value;
                this.TriggerPropertyChanged("ConcentradoID");
            }
        }
        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Nombre {
            get {
                return @__Nombre;
            }
            set {
                @__Nombre = value;
                this.TriggerPropertyChanged("Nombre");
            }
        }
        public virtual int Dataset {
            get {
                return @__Dataset;
            }
            set {
                @__Dataset = value;
                this.TriggerPropertyChanged("Dataset");
            }
        }
        [RemObjects.SDK.StreamAs(RemObjects.SDK.StreamingFormat.AnsiString)]
        public virtual string Template {
            get {
                return @__Template;
            }
            set {
                @__Template = value;
                this.TriggerPropertyChanged("Template");
            }
        }
        public override void ReadComplex(RemObjects.SDK.Serializer serializer) {
            if (serializer.RecordStrictOrder) {
                this.ConcentradoID = serializer.ReadInt32("ConcentradoID");
                this.Nombre = serializer.ReadAnsiString("Nombre");
                this.Dataset = serializer.ReadInt32("Dataset");
                this.Template = serializer.ReadAnsiString("Template");
            }
            else {
                this.ConcentradoID = serializer.ReadInt32("ConcentradoID");
                this.Dataset = serializer.ReadInt32("Dataset");
                this.Nombre = serializer.ReadAnsiString("Nombre");
                this.Template = serializer.ReadAnsiString("Template");
            }
        }
        public override void WriteComplex(RemObjects.SDK.Serializer serializer) {
            if (serializer.RecordStrictOrder) {
                serializer.WriteInt32("ConcentradoID", this.ConcentradoID);
                serializer.WriteAnsiString("Nombre", this.Nombre);
                serializer.WriteInt32("Dataset", this.Dataset);
                serializer.WriteAnsiString("Template", this.Template);
            }
            else {
                serializer.WriteInt32("ConcentradoID", this.ConcentradoID);
                serializer.WriteInt32("Dataset", this.Dataset);
                serializer.WriteAnsiString("Nombre", this.Nombre);
                serializer.WriteAnsiString("Template", this.Template);
            }
        }
    }
    [System.Reflection.ObfuscationAttribute(Exclude=true, ApplyToMembers=false)]
    public class TRPConcentrado_Activator : object, RemObjects.SDK.ITypeActivator {
        public TRPConcentrado_Activator() {
        }
        public object CreateInstance() {
            return new TRPConcentrado();
        }
    }
}
